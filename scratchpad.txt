
struct __Tuple(){}

struct __Tuple(T0){ T0[1] __v; const ref opIndex(size_t i){ return __v[i]; }}

struct __Tuple(T0,T1){
    static if (is(T0==T1)) { T0[2] __v; const ref opIndex(size_t i){ return __v[i]; } } 
    else { T0 __0; T1 __1;}
}
struct __Tuple(T0,T1,T2){
    static if (is(T0==T1) && is(T0==T2)) { T0[3] __v; const ref opIndex(size_t i){ return __v[i]; } } 
    else { T0 __0; T1 __1; T2 __2; }
}

auto __dex_tuple(Ts...)(Ts args){
    return Tuple!Ts(args); 
}

void main()
{
	import std.stdio;
    auto t = __dex_tuple("hei",3);
    writeln(t[0],t[1]);
}
